---
import Layout from "@layouts/Layout.astro";

const { slug } = Astro.params;

const graphqlRequest = {
  query: ` query {
    allBlogs(orderBy: createdAt_DESC, filter: {postSlug: {eq: "${slug}"}}) {
      title
    postSlug
    content(
      markdown: true
    )
    thumbnail {
      url
    }
  }
}`,
};

const response = await fetch("https://graphql.datocms.com/", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
    Authorization: `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
  },
  body: JSON.stringify(graphqlRequest),
});

const json = await response.json();
const data = json.data.allBlogs[0];

export async function getStaticPaths() {
  const slugsResponse = await fetch("https://graphql.datocms.com/", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Accept: "application/json",
      Authorization: `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
    },
    body: JSON.stringify({
      query: `{
        allBlogs{
          postSlug
        }
      }`,
    }),
  });
  const parsedSlugResponse = await slugsResponse.json();

  const pathsArray = [];
  for (const slug of parsedSlugResponse.data.allBlogs) {
    pathsArray.push({ params: { slug: slug.postSlug } });
  }
  return pathsArray;
}
---

<Layout title="Blog">
  <div class="relative py-20 z-10">
    <div class="container mx-auto max-w-screen-lg px-6">
      <article class="bg-background/30 border border-gray-600 p-3 lg:p-10 shadow-lg rounded-xl">
        <header>
          <h1
            class="text-xl xl:text-4xl font-bold my-3"
          >
            {data.title}
          </h1>
          <img
            src={data.thumbnail.url}
            alt="thumbnail"
            class="w-full object-cover rounded-lg my-5"
            transition:name=`media-image-${slug.replace("blog/", "")}`
          />
        </header>
        <div class="blog-content" set:html={data.content} />
      </article>
    </div>
  </div>
</Layout>
